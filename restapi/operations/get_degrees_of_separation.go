// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetDegreesOfSeparationHandlerFunc turns a function with the right signature into a get degrees of separation handler
type GetDegreesOfSeparationHandlerFunc func(GetDegreesOfSeparationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetDegreesOfSeparationHandlerFunc) Handle(params GetDegreesOfSeparationParams) middleware.Responder {
	return fn(params)
}

// GetDegreesOfSeparationHandler interface for that can handle valid get degrees of separation params
type GetDegreesOfSeparationHandler interface {
	Handle(GetDegreesOfSeparationParams) middleware.Responder
}

// NewGetDegreesOfSeparation creates a new http.Handler for the get degrees of separation operation
func NewGetDegreesOfSeparation(ctx *middleware.Context, handler GetDegreesOfSeparationHandler) *GetDegreesOfSeparation {
	return &GetDegreesOfSeparation{Context: ctx, Handler: handler}
}

/* GetDegreesOfSeparation swagger:route GET /calculate_degrees/{actorName}/{castRestriction} getDegreesOfSeparation

GetDegreesOfSeparation get degrees of separation API

*/
type GetDegreesOfSeparation struct {
	Context *middleware.Context
	Handler GetDegreesOfSeparationHandler
}

func (o *GetDegreesOfSeparation) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetDegreesOfSeparationParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
